/*------------------------------------------------------------------------------
Auto-completions should only be suggested within a PML-parsed scope -- i.e. not
inside unprocessed blocks like `[html`, `[input`, `[output` and `[table_data`,
nor inside the `[options` block.
(see #24).
------------------------------------------------------------------------------*/
[
  // ================
  // CTRL+SHIFT+ENTER -> insert `[nl]`  (PML scopes only)
  // ================
  { "keys": ["ctrl+shift+enter"], "command": "insert", "args": {"characters": "[nl]"}, "context":
    [
      // But not if a cursor is inside an unprocessed node:
      { "key": "selector", "operator": "equal", "operand": "text.pml -(text.html | meta.embedded | meta.block.options)", "match_all": true },
    ]
  },
/*==============================================================================
                                  TEXT STYLES
  ==============================================================================
  Inline nodes for text styling should only be applied if all cursors/selections
  are within a PML scope -- i.e. not inside an `[html` node (`text.html` scope).
  ------------------------------------------------------------------------------
*/
  // =============
  // ALT+B -> Bold
  // =============
  // Selection-less cursor(s) positioned on word(s).
  { "keys": ["alt+b"], "command": "run_macro_file", "args": {"file": "Packages/PML/macros/Transform Word - Bold.sublime-macro"}, "context":
    [
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "selector", "operator": "equal", "operand": "text.pml -(text.html | meta.embedded | meta.block.options)", "match_all": true }
    ]
  },
  // Selection-less cursor(s) not positioned on word(s).
  { "keys": ["alt+b"], "command": "insert_snippet", "args": {"contents": "[b $1 ]"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|$)", "match_all": true },
      { "key": "preceding_text", "operator": "not_regex_contains", "operand": "['a-zA-Z0-9_]$", "match_all": true },
      { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single", "match_all": true },
      { "key": "selector", "operator": "equal", "operand": "text.pml -(text.html | meta.embedded | meta.block.options)", "match_all": true }
    ]
  },
  // Cursor(s) with selection(s).
  { "keys": ["alt+b"], "command": "insert_snippet", "args": {"contents": "[b ${SELECTION} ]"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
      { "key": "selector", "operator": "equal", "operand": "text.pml -(text.html | meta.embedded | meta.block.options)", "match_all": true }
    ]
  },
  // ===============
  // ALT+I -> Italic
  // ===============
  // Selection-less cursor(s) positioned on word(s).
  { "keys": ["alt+i"], "command": "run_macro_file", "args": {"file": "Packages/PML/macros/Transform Word - Italic.sublime-macro"}, "context":
    [
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "selector", "operator": "equal", "operand": "text.pml -(text.html | meta.embedded | meta.block.options)", "match_all": true }
    ]
  },
  // Selection-less cursor(s) not positioned on word(s).
  { "keys": ["alt+i"], "command": "insert_snippet", "args": {"contents": "[i $1 ]"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|$)", "match_all": true },
      { "key": "preceding_text", "operator": "not_regex_contains", "operand": "['a-zA-Z0-9_]$", "match_all": true },
      { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single", "match_all": true },
      { "key": "selector", "operator": "equal", "operand": "text.pml -(text.html | meta.embedded | meta.block.options)", "match_all": true }
    ]
  },
  // Cursor(s) with selection(s).
  { "keys": ["alt+i"], "command": "insert_snippet", "args": {"contents": "[i ${SELECTION} ]"}, "context":
    [
      { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true },
      { "key": "selector", "operator": "equal", "operand": "text.pml -(text.html | meta.embedded | meta.block.options)", "match_all": true }
    ]
  },
]
